issues:
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # revive:
    - var-naming # ((var|const|struct field|func) .* should be .*
    - dot-imports # should not use dot imports
    - package-comments # package comment should be of the form
    - unexported-return # exported func .* returns unexported type .*, which can be annoying to use
    - indent-error-flow # if block ends with a return statement, so drop this else and outdent its block
    - "exported: (type|func) name will be used as .* by other packages, and that stutters;"
    # typecheck:
    - "undeclared name: `.*`"
    - "\".*\" imported but not used"
    ## incorrectly triggered when inner empty `if` is preceded by a valuable comment
    - "elseif: can replace 'else {if cond {}}' with 'else if cond {}'"
    - "empty-block: this block is empty, you can remove it" # reduces readability, asking for `for` statement without body
  exclude-rules:
    - path: _test\.go
      text: ".*Error return value of .* is not checked.*"
    - path: _test\.go
      text: ".*G104: Errors unhandled.*"

linters:
  enable:
    - gocritic
    - gosec
    - revive

run:
  concurrency: 4
  deadline: 10m

skip-files:
  - "zz_generated\\..*\\.go$"
